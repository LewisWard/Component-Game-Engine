// Author  : Lewis Ward (i7212443)
// Program : Game Engine
// Date    : 25/03/2016
#pragma once
#include "Components.h"

namespace GE
{
	//----------------------------------------------------------------------------------------------------------------------
	/// \brief Stores a Bullet btCollisionShape
	//----------------------------------------------------------------------------------------------------------------------
	class CollisionShape : public Component
	{
	public:
		//----------------------------------------------------------------------------------------------------------------------
		/// \brief  Constructor
		//----------------------------------------------------------------------------------------------------------------------
		CollisionShape();

		//----------------------------------------------------------------------------------------------------------------------
		/// \brief  Desstructor
		//----------------------------------------------------------------------------------------------------------------------
		~CollisionShape() { }

		//----------------------------------------------------------------------------------------------------------------------
		/// \brief  creates a collision shape
		/// \parma  bullet collision shape (i.e. btBoxShape, btSphereShape, btCapsuleShape)
		//----------------------------------------------------------------------------------------------------------------------
		template <class T>
		void createShape(T shape)
		{
			m_collisionShape = mkShare<T>(shape);
		}

		//----------------------------------------------------------------------------------------------------------------------
		/// \brief  get the btCollisionShape
		/// \return	glm::vec3
		//----------------------------------------------------------------------------------------------------------------------
		inline shared<btCollisionShape> getShape() { return m_collisionShape; }

	private:
		shared<btCollisionShape> m_collisionShape;
	};
};

